
- name: Create persistent journal directory
  ansible.builtin.file:
    path: "/data02/_journal"
    state: directory

- name: Render journal persistent bind mount point
  ansible.builtin.template:
    src: var-log-journal.mount.j2
    dest: /etc/systemd/system/var-log-journal.mount
  register: persistent_journal

- name: Run daemon reload to apply persistent journal changes
  ansible.builtin.systemd:
    daemon_reload: true
  when: persistent_journal.changed

- name: Install Base OS packages
  ansible.builtin.package:
    name:
    # - epel-release
    - sysstat
    - podman
    - podman-docker
    - podman-plugins
    - containernetworking-plugins
    - crun
    - bash-completion
    - bcc-tools
    - dnsmasq
    # - fail2ban

- name: Set selinux policy for containers
  sefcontext:
   target: '{{ item.target }}(/.*)?'
   setype: "{{ item.setype }}"
   reload: True
   state: present
  register: filecontext
  with_items:
  - { target: '/var/lib/containers', setype: 'container_var_lib_t' }

- name: Run restore context to reload selinux
  shell: restorecon -R -v /var/lib/{{ item.target }}
  when: filecontext.results[item.index].changed
  with_items:
  - { index: 0, target: 'containers' }

- name: Render podman network reload service
  ansible.builtin.template:
    src: podman-network-reload.service.j2
    dest: /etc/systemd/system/podman-network-reload.service

- name: Run daemon reload to make Quadlet create the service files
  ansible.builtin.systemd:
    daemon_reload: true

- name: Start systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true

  with_items: 
  - sysstat
  - dnsmasq
  - podman-network-reload
